Things to do in the neuro library.

extlib (SDL) -- There seems to be a memory leak:
	 - When running the "simple" example
	   project with valgrind, I get memory
	   leaks with SDL. This could be SDL
	   though because I couldn't trace the
	   leaks. About 27KB leaked.

extlib -- the fonts have a memory leak:
	 - The code to load the fonts need
	   to be checked for memory leaks
	   because valgrind currently says
	   theres about 27k of constant mem
	   leak, no matter how much fonts you
	   create. It could be a leak in freetype
	   itself. 

	   * Just checked and the values
	   are different and they are the exact
	   same on another project not at all
	   using the fonts...

graphics -- Neuro_FlushDraw has an alien bug:
	 - When this function is called after
	   a certain context variable changes
	   its position or such, the algorithm
	   does a strange behavior : an out of
	   place rectangle (black color) of not
	   the exact size of the image to redraw
	   sticks on the buffer(ie it doesn't redraw
	   this part of the screen properly). Small
	   tests shows that this bug happens only
	   when the image position gets put to the
	   left of its last position. The alien black
	   rectangle has the same coordinate as the
	   image but it is shorter by about 15 pixels
	   and longer by about 20 pixels.

graphics -- Neuro_SetImgPos is broken:
	 - The function should make the image be redrawn
	   but it should do so using the painter's algorithm
	   instead of drawing the image on the top of the stack
	   as it is doing currently.

debug -- The whole debug.c file needs to change:
	 - The module needs to be put into src/misc
	   in the first place and every Debug_ functions
	   need to be interfaced to Neuro_ functions.

debug -- need more "intelligent" processing(low priority):
	 - The Neuro_DebugVerbose function needs to input
	   more high level strings. We need the function to
	   input strings that need to be processed for special
	   characters which will change the behavior of the
	   output system. I want this to be exactly like the
	   debugging system in wine; a system using +<channel>
	   commas to separate and -<channel> we also need 
	   something like : warn+<channel>,error-<channel>,
	   etc.

bitmap -- Add checks to approve bitmap files:
	 - In order to make the bitmap loader more robust,
	   it is imperative to implement a set of checks to
	   see if the input file to be loaded by the bitmap
	   loader are really bitmaps.

general -- document the API (high priority):
	 - All the external functions of the API should be 
	   documented in a format that neuroman.tcl should
	   be able to parse.
	 - EBuf  [done needs to be revised]
	 - Video [not done]
	 - Events [not done]
	 - misc (including the extlib interface) [not done]

extlib -- (extlib.h) rename the XK_ key names:
	 - inside the file extlib.h, all the XK_ macros needs to
	   be renamed to our own which is NK_ (neuro key) to
	   completely detach from X11's key macros and thus
	   avoid any conflicts with it. This is a "serious" 
	   cut of any backward compatibility so all the programs
	   using libneuro will need to be changed.
	

extlib -- change the Lib_ prefix (low priority):
	- Change the Lib_ prefix of the extlib module to something less 
	  common so apps that use Neuro won't have conflits if 
	  they themselves use the prefix Lib_.

* extlib sdl -- default depth currently static 16 :
	- make this so it is settable and not just a static 16.

extlib -- memory leak with the fonts :
	- I noticed we have a memory leak concerning our interfacing with the
	  library freetype2, we need to fix it asap.

graphics engine : coredraw -- review and heavily test Graphics_RedrawSection :
	- I noticed this function is really the weak point of the painter's algorithm
	  and thus needs heavy testing and consolidation.

bitmap loading : 
	- The bitmap loader blocks the process until it finished loading a bitmap.
	  The establishment of a new non blocking sequencially loading (by using
	  a poll function) to gradually load a bitmap should be made.
	  The bitmap would then be able to load an infinite amount of bitmaps at
	  the same time since every bitmaps would each have a bitmap context that
	  will keep everything necessary to load the bitmap.

***goals for 1.0 :
	- make the extlib drivers their own shared 
	  objects that neuro could dynamically load
	  during runtime. A configuration file would
	  be used to set which one of the drivers to
	  load.
	- code openGL drivers for neuro, those drivers
	  would probably have more extensible set of
	  functions which could be used by the applications.
	  So I guess it would be a different branch than
	  the 2d extlib ones.

extlib X11 -- implement gfx shared memory :
	- in order to get far faster performances with
	  pretty much any graphical operations, the
	  addition of MIT shared memory for every images
	  will be used.
